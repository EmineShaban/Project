{"ast":null,"code":"\"use strict\";\n/**\r\n * Class Cookie - Holds static functions to deal with Cookies\r\n */\n\nvar CookieService = function () {\n  function CookieService() {}\n  /**\r\n   * Checks the existence of a single cookie by it's name\r\n   *\r\n   * @param  {string} name Identification of the cookie\r\n   * @returns existence of the cookie\r\n   */\n\n\n  CookieService.prototype.check = function (name) {\n    if (typeof document === \"undefined\") return false; // Check if document exist avoiding issues on server side prerendering\n\n    name = encodeURIComponent(name);\n    var regexp = new RegExp('(?:^' + name + '|;\\\\s*' + name + ')=(.*?)(?:;|$)', 'g');\n    var exists = regexp.test(document.cookie);\n    return exists;\n  };\n  /**\r\n   * Retrieves a single cookie by it's name\r\n   *\r\n   * @param  {string} name Identification of the Cookie\r\n   * @returns The Cookie's value\r\n   */\n\n\n  CookieService.prototype.get = function (name) {\n    if (this.check(name)) {\n      name = encodeURIComponent(name);\n      var regexp = new RegExp('(?:^' + name + '|;\\\\s*' + name + ')=(.*?)(?:;|$)', 'g');\n      var result = regexp.exec(document.cookie);\n      return decodeURIComponent(result[1]);\n    } else {\n      return '';\n    }\n  };\n  /**\r\n   * Retrieves a a list of all cookie avaiable\r\n   *\r\n   * @returns Object with all Cookies\r\n   */\n\n\n  CookieService.prototype.getAll = function () {\n    var cookies = {}; // tslint:disable-next-line:triple-equals\n\n    if (document.cookie && document.cookie != '') {\n      var split = document.cookie.split(';');\n\n      for (var _i = 0, split_1 = split; _i < split_1.length; _i++) {\n        var s = split_1[_i];\n        var currCookie = s.split('=');\n        currCookie[0] = currCookie[0].replace(/^ /, '');\n        cookies[decodeURIComponent(currCookie[0])] = decodeURIComponent(currCookie[1]);\n      }\n    }\n\n    return cookies;\n  };\n  /**\r\n   * Save the Cookie\r\n   *\r\n   * @param  {string} name Cookie's identification\r\n   * @param  {string} value Cookie's value\r\n   * @param  {number} expires Cookie's expiration date in days from now or at a specific date from a Date object. If it's undefined the cookie is a session Cookie\r\n   * @param  {string} path Path relative to the domain where the cookie should be avaiable. Default /\r\n   * @param  {string} domain Domain where the cookie should be avaiable. Default current domain\r\n   * @param  {boolean} secure If true, the cookie will only be available through a secured connection\r\n   */\n\n\n  CookieService.prototype.set = function (name, value, expires, path, domain, secure) {\n    var cookieStr = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n\n    if (expires) {\n      if (typeof expires === 'number') {\n        var dtExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\n        cookieStr += 'expires=' + dtExpires.toUTCString() + ';';\n      } else {\n        cookieStr += 'expires=' + expires.toUTCString() + ';';\n      }\n    }\n\n    if (path) {\n      cookieStr += 'path=' + path + ';';\n    }\n\n    if (domain) {\n      cookieStr += 'domain=' + domain + ';';\n    }\n\n    if (secure) {\n      cookieStr += 'secure;';\n    } // console.log(cookieStr);\n\n\n    document.cookie = cookieStr;\n  };\n  /**\r\n   * Removes specified Cookie\r\n   *\r\n   * @param  {string} name Cookie's identification\r\n   * @param  {string} path Path relative to the domain where the cookie should be avaiable. Default /\r\n   * @param  {string} domain Domain where the cookie should be avaiable. Default current domain\r\n   */\n\n\n  CookieService.prototype.delete = function (name, path, domain) {\n    this.set(name, '', -1, path, domain);\n  };\n  /**\r\n   * Delete all cookie avaiable\r\n   */\n\n\n  CookieService.prototype.deleteAll = function (path, domain) {\n    var cookies = this.getAll();\n\n    for (var _i = 0, _a = Object.keys(cookies); _i < _a.length; _i++) {\n      var cookieName = _a[_i];\n      this.delete(cookieName, path, domain);\n    }\n  };\n\n  return CookieService;\n}();\n\nexports.CookieService = CookieService;\nexports.Cookie = new CookieService();","map":{"version":3,"names":["CookieService","prototype","check","name","document","encodeURIComponent","regexp","RegExp","exists","test","cookie","get","result","exec","decodeURIComponent","getAll","cookies","split","_i","split_1","length","s","currCookie","replace","set","value","expires","path","domain","secure","cookieStr","dtExpires","Date","getTime","toUTCString","delete","deleteAll","_a","Object","keys","cookieName","exports","Cookie"],"sources":["/Users/emineshaban/Documents/GitHub/Project/node_modules/ng2-cookies/cookie.js"],"sourcesContent":["\"use strict\";\r\n/**\r\n * Class Cookie - Holds static functions to deal with Cookies\r\n */\r\nvar CookieService = (function () {\r\n    function CookieService() {\r\n    }\r\n    /**\r\n     * Checks the existence of a single cookie by it's name\r\n     *\r\n     * @param  {string} name Identification of the cookie\r\n     * @returns existence of the cookie\r\n     */\r\n    CookieService.prototype.check = function (name) {\r\n        if (typeof document === \"undefined\")\r\n            return false; // Check if document exist avoiding issues on server side prerendering\r\n        name = encodeURIComponent(name);\r\n        var regexp = new RegExp('(?:^' + name + '|;\\\\s*' + name + ')=(.*?)(?:;|$)', 'g');\r\n        var exists = regexp.test(document.cookie);\r\n        return exists;\r\n    };\r\n    /**\r\n     * Retrieves a single cookie by it's name\r\n     *\r\n     * @param  {string} name Identification of the Cookie\r\n     * @returns The Cookie's value\r\n     */\r\n    CookieService.prototype.get = function (name) {\r\n        if (this.check(name)) {\r\n            name = encodeURIComponent(name);\r\n            var regexp = new RegExp('(?:^' + name + '|;\\\\s*' + name + ')=(.*?)(?:;|$)', 'g');\r\n            var result = regexp.exec(document.cookie);\r\n            return decodeURIComponent(result[1]);\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves a a list of all cookie avaiable\r\n     *\r\n     * @returns Object with all Cookies\r\n     */\r\n    CookieService.prototype.getAll = function () {\r\n        var cookies = {};\r\n        // tslint:disable-next-line:triple-equals\r\n        if (document.cookie && document.cookie != '') {\r\n            var split = document.cookie.split(';');\r\n            for (var _i = 0, split_1 = split; _i < split_1.length; _i++) {\r\n                var s = split_1[_i];\r\n                var currCookie = s.split('=');\r\n                currCookie[0] = currCookie[0].replace(/^ /, '');\r\n                cookies[decodeURIComponent(currCookie[0])] = decodeURIComponent(currCookie[1]);\r\n            }\r\n        }\r\n        return cookies;\r\n    };\r\n    /**\r\n     * Save the Cookie\r\n     *\r\n     * @param  {string} name Cookie's identification\r\n     * @param  {string} value Cookie's value\r\n     * @param  {number} expires Cookie's expiration date in days from now or at a specific date from a Date object. If it's undefined the cookie is a session Cookie\r\n     * @param  {string} path Path relative to the domain where the cookie should be avaiable. Default /\r\n     * @param  {string} domain Domain where the cookie should be avaiable. Default current domain\r\n     * @param  {boolean} secure If true, the cookie will only be available through a secured connection\r\n     */\r\n    CookieService.prototype.set = function (name, value, expires, path, domain, secure) {\r\n        var cookieStr = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\r\n        if (expires) {\r\n            if (typeof expires === 'number') {\r\n                var dtExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\r\n                cookieStr += 'expires=' + dtExpires.toUTCString() + ';';\r\n            }\r\n            else {\r\n                cookieStr += 'expires=' + expires.toUTCString() + ';';\r\n            }\r\n        }\r\n        if (path) {\r\n            cookieStr += 'path=' + path + ';';\r\n        }\r\n        if (domain) {\r\n            cookieStr += 'domain=' + domain + ';';\r\n        }\r\n        if (secure) {\r\n            cookieStr += 'secure;';\r\n        }\r\n        // console.log(cookieStr);\r\n        document.cookie = cookieStr;\r\n    };\r\n    /**\r\n     * Removes specified Cookie\r\n     *\r\n     * @param  {string} name Cookie's identification\r\n     * @param  {string} path Path relative to the domain where the cookie should be avaiable. Default /\r\n     * @param  {string} domain Domain where the cookie should be avaiable. Default current domain\r\n     */\r\n    CookieService.prototype.delete = function (name, path, domain) {\r\n        this.set(name, '', -1, path, domain);\r\n    };\r\n    /**\r\n     * Delete all cookie avaiable\r\n     */\r\n    CookieService.prototype.deleteAll = function (path, domain) {\r\n        var cookies = this.getAll();\r\n        for (var _i = 0, _a = Object.keys(cookies); _i < _a.length; _i++) {\r\n            var cookieName = _a[_i];\r\n            this.delete(cookieName, path, domain);\r\n        }\r\n    };\r\n    return CookieService;\r\n}());\r\nexports.CookieService = CookieService;\r\nexports.Cookie = new CookieService();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}