{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction LoginComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const errorMessage_r3 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", errorMessage_r3, \" \");\n  }\n}\n\nfunction LoginComponent_ng_container_11_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_11_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" Email is not valid! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoginComponent_ng_container_11_p_1_Template, 2, 0, \"p\", 1);\n    i0.ɵɵtemplate(2, LoginComponent_ng_container_11_p_2_Template, 2, 0, \"p\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginFormGroup.controls[\"email\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginFormGroup.controls[\"email\"].errors.email);\n  }\n}\n\nfunction LoginComponent_ng_container_17_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_17_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" Password must be at least 5 characters! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoginComponent_ng_container_17_p_1_Template, 2, 0, \"p\", 1);\n    i0.ɵɵtemplate(2, LoginComponent_ng_container_17_p_2_Template, 2, 0, \"p\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginFormGroup.controls[\"password\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginFormGroup.controls[\"password\"].errors.minlength);\n  }\n}\n\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n\n  ngOnInit() {}\n\n  handleFormSubmit(value) {\n    let email = value.email;\n    let password = value.password;\n    this.authService.login(email, password).subscribe({\n      next: () => {\n        // sessionStorage.setItem('email', result.data)\n        // sessionStorage.setItem('authToken', result.accessToken)\n        // sessionStorage.setItem('userId', result._id)\n        this.router.navigate(['/']);\n      },\n      error: e => console.error(e)\n    });\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 28,\n  vars: 12,\n  consts: [[1, \"login\", 3, \"formGroup\", \"ngSubmit\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"field\", \"field-icon\"], [\"for\", \"email\"], [1, \"fas\", \"fa-envelope\"], [\"formControlName\", \"email\", \"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"placeholder\", \"john.doe@gmail.com\"], [4, \"ngIf\"], [\"for\", \"password\"], [1, \"fas\", \"fa-lock\"], [\"formControlName\", \"password\", \"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"placeholder\", \"******\"], [3, \"disabled\", \"click\"], [1, \"text-center\"], [\"href\", \"#\"], [1, \"error\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.handleFormSubmit();\n      });\n      i0.ɵɵelementStart(1, \"fieldset\")(2, \"h2\");\n      i0.ɵɵtext(3, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, LoginComponent_p_4_Template, 2, 1, \"p\", 1);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementStart(6, \"p\", 2)(7, \"label\", 3)(8, \"span\");\n      i0.ɵɵelement(9, \"i\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, LoginComponent_ng_container_11_Template, 3, 2, \"ng-container\", 6);\n      i0.ɵɵelementStart(12, \"p\", 2)(13, \"label\", 7)(14, \"span\");\n      i0.ɵɵelement(15, \"i\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(16, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, LoginComponent_ng_container_17_Template, 3, 2, \"ng-container\", 6);\n      i0.ɵɵelementStart(18, \"div\");\n      i0.ɵɵtext(19);\n      i0.ɵɵpipe(20, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_21_listener() {\n        return ctx.loginHandler();\n      });\n      i0.ɵɵpipe(22, \"async\");\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"p\", 11);\n      i0.ɵɵtext(25, \" Have an account? \");\n      i0.ɵɵelementStart(26, \"a\", 12);\n      i0.ɵɵtext(27, \"Register\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginFormGroup);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 6, ctx.errorMessage$));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginFormGroup.controls[\"email\"].touched && ctx.loginFormGroup.controls[\"email\"].invalid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginFormGroup.controls[\"password\"].touched && ctx.loginFormGroup.controls[\"password\"].invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" IsLoginPending: \", i0.ɵɵpipeBind1(20, 8, ctx.isLoginPending$), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", i0.ɵɵpipeBind1(22, 10, ctx.isLoginPending$));\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAmBQA;IACIA;IACJA;;;;;IADIA;IAAAA;;;;;;IAQAA;IACIA;IACJA;;;;;;IAEAA;IACIA;IACJA;;;;;;IAPJA;IACIA;IAIAA;IAGJA;;;;;IAPQA;IAAAA;IAIAA;IAAAA;;;;;;IAYJA;IACIA;IACJA;;;;;;IACAA;IACIA;IACJA;;;;;;IAPJA;IAEIA;IAGAA;IAGJA;;;;;IANQA;IAAAA;IAGAA;IAAAA;;;;ACtChB,OAAM,MAAOC,cAAP,CAAqB;EAEzBC,YAAoBC,WAApB,EAAsDC,MAAtD,EAAoE;IAAhD;IAAkC;EAAmB;;EAEzEC,QAAQ,IACP;;EACDC,gBAAgB,CAACC,KAAD,EAA2C;IACzD,IAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;IACA,IAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;IACA,KAAKN,WAAL,CAAiBO,KAAjB,CAAuBF,KAAvB,EAA8BC,QAA9B,EAAwCE,SAAxC,CAAkD;MAChDC,IAAI,EAAE,MAAK;QACT;QACA;QACA;QACA,KAAKR,MAAL,CAAYS,QAAZ,CAAqB,CAAC,GAAD,CAArB;MACD,CAN+C;MAOhDC,KAAK,EAAGC,CAAD,IAAOC,OAAO,CAACF,KAAR,CAAcC,CAAd;IAPkC,CAAlD;EASD;;AAlBwB;;;mBAAdd,gBAAcD;AAAA;;;QAAdC;EAAcgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDM3BrB;MAAiDA;QAAA,OAAYsB,sBAAZ;MAA8B,CAA9B;MAC7CtB,iCAAU,CAAV,EAAU,IAAV;MACQA;MAAUA;MAEdA;;MAIAA,6BAA4B,CAA5B,EAA4B,OAA5B,EAA4B,CAA5B,EAA4B,CAA5B,EAA4B,MAA5B;MAC6BA;MAA+BA;MACxDA;MACJA;MACAA;MAUAA,8BAA4B,EAA5B,EAA4B,OAA5B,EAA4B,CAA5B,EAA4B,EAA5B,EAA4B,MAA5B;MACgCA;MAA2BA;MACvDA;MACJA;MAEAA;MAUAA;MACIA;;MACJA;MACAA;MAA+CA;QAAA,OAASsB,kBAAT;MAAuB,CAAvB;;MAAyBtB;MAAKA;MAE7EA;MACIA;MACAA;MAAYA;MAAQA;;;;MA5CZA;MAIRA;MAAAA;MAQWA;MAAAA;MAgBVA;MAAAA;MAUDA;MAAAA;MAEIA;MAAAA","names":["i0","LoginComponent","constructor","authService","router","ngOnInit","handleFormSubmit","value","email","password","login","subscribe","next","navigate","error","e","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/emineshaban/Documents/GitHub/Project/src/app/core/auth/login/login.component.html","/Users/emineshaban/Documents/GitHub/Project/src/app/core/auth/login/login.component.ts"],"sourcesContent":["<!-- <form #createForm=\"ngForm\" (ngSubmit)=\"handleFormSubmit(createForm.value)\">\n \n    <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"john.doe@gmail.com\" ngModel>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"text\" name=\"password\" id=\"password\" placeholder=\"******\" ngModel>\n    </div>\n    <button>Create</button>\n</form> -->\n\n\n<form class=\"login\" [formGroup]=\"loginFormGroup\" (ngSubmit)=\"handleFormSubmit()\">\n    <fieldset>\n        <h2>Login Form</h2>\n\n        <p *ngIf=\"(errorMessage$ | async) as errorMessage\" class=\"error\">\n            {{errorMessage}}\n        </p>\n\n        <p class=\"field field-icon\">\n            <label for=\"email\"><span><i class=\"fas fa-envelope\"></i></span></label>\n            <input formControlName=\"email\" type=\"email\" name=\"email\" id=\"email\" placeholder=\"john.doe@gmail.com\">\n        </p>\n        <ng-container *ngIf=\"loginFormGroup.controls['email'].touched && loginFormGroup.controls['email'].invalid\">\n            <p *ngIf=\"loginFormGroup.controls['email'].errors.required\" class=\"error\">\n                Email is required!\n            </p>\n\n            <p *ngIf=\"loginFormGroup.controls['email'].errors.email\" class=\"error\">\n                Email is not valid!\n            </p>\n        </ng-container>\n\n        <p class=\"field field-icon\">\n            <label for=\"password\"><span><i class=\"fas fa-lock\"></i></span></label>\n            <input formControlName=\"password\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"******\">\n        </p>\n\n        <ng-container\n            *ngIf=\"loginFormGroup.controls['password'].touched && loginFormGroup.controls['password'].invalid\">\n            <p *ngIf=\"loginFormGroup.controls['password'].errors.required\" class=\"error\">\n                Password is required!\n            </p>\n            <p *ngIf=\"loginFormGroup.controls['password'].errors.minlength\" class=\"error\">\n                Password must be at least 5 characters!\n            </p>\n        </ng-container>\n\n        <div>\n            IsLoginPending: {{(isLoginPending$ | async)}}\n        </div>\n        <button [disabled]=\"(isLoginPending$ | async)\" (click)=\"loginHandler()\">Login</button>\n\n        <p class=\"text-center\">\n            Have an account?\n            <a href=\"#\">Register</a>\n        </p>\n\n    </fieldset>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../service/auth.service\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  handleFormSubmit(value: { email: string, password: string }): void {\n    let email = value.email\n    let password = value.password\n    this.authService.login(email, password).subscribe({\n      next: () => {\n        // sessionStorage.setItem('email', result.data)\n        // sessionStorage.setItem('authToken', result.accessToken)\n        // sessionStorage.setItem('userId', result._id)\n        this.router.navigate(['/']);\n      },\n      error: (e) => console.error(e)\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}